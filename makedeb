#!/bin/bash

# sub to bind directories
bindall() {
	mount --bind /proc /mnt/team/proc
	mount --bind /sys /mnt/team/sys
	mount --bind /tmp /mnt/team/tmp
	mount --bind /dev /mnt/team/dev
	mount --bind /dev/pts /mnt/team/dev/pts
}

# sub to unbindall
unbindall() {
	umount /mnt/team/dev/pts
	umount /mnt/team/dev
	umount /mnt/team/tmp
	umount /mnt/team/sys
	umount /mnt/team/proc
}

# format team
mkfs.vfat -v -n EFI /dev/sda1
mkfs.ext4 -v -j -L team /dev/sda2

mount -L team /mnt/team

# create boot/efi if it does not exist
# mount dir
test -d /mnt/team/boot/efi || mkdir -p /mnt/team/boot/efi
mount -L EFI /mnt/team/boot/efi

# mount /mnt/ad64 if not mounted
findmnt /mnt/ad64
test $? -eq 0 || mount /mnt/ad64

# install linux
debootstrap noble /mnt/team http://ubuntu.mirror.ac.za

# edit sources.list
sed -i -e 's/main/main multiverse universe restricted/' /mnt/team/etc/apt/sources.list
# append updates, secrurity, backports, proposed
sed -i -e '$a\deb http://ubuntu.mirror.ac.za noble-updates main multiverse universe restricted\
deb http://ubuntu.mirror.ac.za noble-security main multiverse universe restricted\
deb http://ubuntu.mirror.ac.za noble-proposed main multiverse universe restricted\
deb http://ubuntu.mirror.ac.za noble-backports main multiverse universe restricted' /mnt/team/etc/apt/sources.list

# to setup debhome and svn repository.
# copy debhomepubkey.asc to /etc/apt/keyrings/
# copy debhome.sources to /etc/apt/sources.list.d/
# make directories if necessary
test -d /mnt/team/etc/apt/keyrings || mkdir -p /mnt/team/etc/apt/keyrings
test -d /mnt/team/etc/apt/sources.list.d || mkdir -p /mnt/team/etc/apt/sources.list.d
cp -v /mnt/debhome/debhomepubkey.asc /mnt/team/etc/apt/keyrings/
cp -v /mnt/debhome/debhome.sources /mnt/team/etc/apt/sources.list.d/

# edit fstab
sed -i -e '/LABEL=team/d' /mnt/team/etc/fstab
sed -i -e '/LABEL=ad64/d' /mnt/team/etc/fstab
sed -i -e '$a\LABEL=team / ext4 defaults 0 1' /mnt/team/etc/fstab
sed -i -e '$a\LABEL=ad64 /mnt/ad64 ext4 defaults,noauto 0 2' /mnt/team/etc/fstab

# bind and chroot
bindall
# cp chrootinstall to /mnt/team/usr/local/bin
# check if chrootinstall exists
if test -x /usr/local/bin/chrootinstall; then
	cp -v /usr/local/bin/chrootinstall /mnt/team/usr/local/bin/
else
	echo "chrootinstall not found, exiting..."
	exit 1
fi

# run chrootinstall in the chroot environment
chroot /mnt/team /usr/local/bin/chrootinstall

unbindall

# make /boot/grub if it does not exist
test -d /mnt/team/boot/grub || mkdir -p /mnt/team/boot/grub

# create empty /mnt/team/boot/grub/custom.cfg
echo "# custom.cfg" > /mnt/team/boot/grub/custom.cfg

# edit custom.cfg for grub
sed -i -e 'a\set menu_color_normal=white/blue \
set menu_color_highlight=red/light-gray \
set color_normal=yellow/blue \
set color_hightlight=red/black' /mnt/team/boot/grub/custom.cfg

grub-install --root-directory=/mnt/team /dev/sda

bindall
chroot /mnt/team update-grub

# umount ad64
chroot /mnt/team umount /mnt/ad64
unbindall
